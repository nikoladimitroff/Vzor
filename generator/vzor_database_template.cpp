#include <vzor/vzor.h>

namespace Vzor
{
	namespace Database
	{
		static std::array<char, /*REFLECTED_TYPES_COUNT*/ * sizeof(ReflectedType)> ImplReflectedTypesList;
		struct TypeRegistrator
		{
			TypeRegistrator(ReflectedType&& type)
			{
				std::memcpy(&ImplReflectedTypesList[type.TypeId * sizeof(ReflectedType)], &type, sizeof(ReflectedType));
			}
		};

		static struct ReflectedDatabaseInitializer
		{
			ReflectedDatabaseInitializer()
			{
				Vzor::Detail::AllReflectedTypes = reinterpret_cast<const ReflectedType*>(ImplReflectedTypesList.data());
			}
		} VzorInitializer;

		// Do not modify this file beyond this point - it is autogenerated
		// REFLECTED DATA BEGINS HERE

		// REFLECTED DATA ENDS HERE
	}
}