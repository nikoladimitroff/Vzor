#include <vzor/vzor.h>

namespace Vzor
{
	namespace Database
	{
		static ReflectedType AllReflectedTypes[4] =
		{
			{ 0, "char",{} },
			{ 1, "int",{} },
			{ 2, "float",{} },
		};

		struct TypeRegistrator
		{
			TypeRegistrator(ReflectedType&& type)
			{
				std::memcpy(&AllReflectedTypes[type.TypeId], &type, sizeof(ReflectedType));
			}
		};

		static struct ReflectedDatabaseInitializer
		{
			ReflectedDatabaseInitializer()
			{
				Vzor::Detail::AllReflectedTypes = AllReflectedTypes;
			}
		} VzorInitializer;

		// Do not modify this file beyond this point - it is autogenerated
		// REFLECTED DATA BEGINS HERE

		static TypeRegistrator Registrator_Vector3({
			3, "Vector3",
			{
				ReflectedVariable(2, "X", (void*)0x0),
				ReflectedVariable(2, "Y", (void*)0x4),
				ReflectedVariable(2, "Z", (void*)0x8),
			}
		});
		// REFLECTED DATA ENDS HERE
	}
}